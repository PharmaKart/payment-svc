syntax = "proto3";

package order;

option go_package = "../proto";

service OrderService {
    rpc PlaceOrder(PlaceOrderRequest) returns (PlaceOrderResponse);
    rpc GetOrder(GetOrderRequest) returns (GetOrderResponse);
    rpc ListCustomersOrders(ListCustomersOrdersRequest) returns (ListCustomersOrdersResponse);
    rpc ListAllOrders(ListAllOrdersRequest) returns (ListAllOrdersResponse);
    rpc UpdateOrderStatus(UpdateOrderStatusRequest) returns (UpdateOrderStatusResponse);
}

message OrderItem {
    string product_id = 1;
    string product_name = 2;
    int32 quantity = 3;
    double price = 4;
}

message PlaceOrderRequest {
    string customer_id = 1;
    repeated OrderItem items = 2;
    optional string prescription_url = 3;
}

message PlaceOrderResponse {
    string order_id = 1;
    string payment_url = 2;
}

message GetOrderRequest {
    string order_id = 1;
    string customer_id = 2;
}

message GetOrderResponse {
    string order_id = 1;
    string customer_id = 2;
    repeated OrderItem items = 3;
    string status = 4;
    optional string prescription_url = 5;
}

message ListCustomersOrdersRequest {
    string customer_id = 1;
    int32 page = 2;
    int32 limit = 3;
    string sort_by = 4;
    string sort_order = 5;
    string filter = 6;
    string filter_value = 7;
}

message ListCustomersOrdersResponse {
    repeated GetOrderResponse orders = 1;
    int32 total = 2;
    int32 page = 3;
    int32 limit = 4;
}

message ListAllOrdersRequest {
    int32 page = 1;
    int32 limit = 2;
    string sort_by = 3;
    string sort_order = 4;
    string filter = 5;
    string filter_value = 6;
}

message ListAllOrdersResponse {
    repeated GetOrderResponse orders = 1;
    int32 total = 2;
    int32 page = 3;
    int32 limit = 4;
}

message UpdateOrderStatusRequest {
    string order_id = 1;
    string customer_id = 2;
    string status = 3;
}

message UpdateOrderStatusResponse {
    string message = 1;
}
